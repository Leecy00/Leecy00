-- 1. 사원테이블에서 직위별 최소 월급을 구하되 직위가 CLERK인 것만 출력하라.
select * 
from emp 
where job = 'clerk';

select job, min(sal) 최소월급
from emp 
group by job having job = 'clerk';
 
 -- 2. 커미션이 책정된 사원은 모두 몇 명인가?
select count(comm) 커미션
from emp
where comm is not null;
 
-- 3. 직위가 'SALESMAN'이고 월급이 1000이상인 사원의 이름과 월급을 출력하라.
select ename,sal
from emp
where job = 'salesman' and sal >= 1000;

-- 4. 부서별 평균월급을 출력하되, 평균월급이 2000보다 큰 부서의 부서번호와 평균월급을 출력하라.
select * 
from emp e
join dept d
on d.deptno = e.deptno;

select dname, avg(sal)   
from emp e
join dept d
on d.deptno = e.deptno
group by dname;

select dname, avg(sal)   
from emp e
join dept d
on d.deptno = e.deptno
group by dname having avg(sal) > 2000;

select deptno, avg(sal)
from emp
group by deptno having avg(sal) > 2000;

-- 5. 직위가 MANAGER인 사원을 뽑는데 월급이 높은 사람 순으로 이름, 직위, 월급을 출력하라.
select *
from emp
where job = 'manager' 
order by sal desc;

select ename, job, sal
from emp
where job = 'manager' 
order by sal desc;

-- 6. 각 직위별로 총월급을 출력하되 월급이 낮은 순으로 출력하라.
select job
from emp
group by job;

select job, sum(sal) 
from emp
group by job 
order by sum(sal) asc;

-- 7. 직위별 총월급을 출력하되, 직위가 'MANAGER'인 사원들은 제외하라. 그리고 그 총월급이 5000보다 큰 직위와 총월급만 출력하라.
select job, sum(sal) 
from emp
group by job having job <> 'manager';

select job, sum(sal) 
from emp
group by job having job <> 'manager'
and sum(sal) > 5000;

-- 8. 직위별 최대월급을 출력하되, 직위가 'CLERK'인 사원들은 제외하라. 그리고 그 최대월급이 2000 이상인 직위와 최대월급을 최대 월급이 높은 순으로 정렬하여 출력하라.
select job, max(sal)
from emp 
group by job;

select job, max(sal)
from emp 
group by job having job <> 'clerk';

select job, max(sal)
from emp 
group by job having job <> 'clerk' 
and max(sal) > 2000;

select job, max(sal)
from emp 
group by job having job <> 'clerk' 
and max(sal) > 2000
order by max(sal) desc;

-- 9. 사원들의 이름, 부서번호, 부서이름을 출력하라.
select * 
from emp;

select *
from emp e
join dept d
on e.deptno = d.deptno;

select e.ename, e.mgr, d.dname
from emp e
join dept d
on e.deptno = d.deptno ; 

-- 10. DALLAS에서 근무하는 사원의 이름, 직위, 부서번호, 부서이름을 출력하라.
select *
from emp e
join dept d
on e.deptno = d.deptno;

select *
from emp e
join dept d 
on e. deptno = d.deptno
where d.loc like 'd%';

select e.ename, e.job, e.deptno
from emp e
join dept d 
on e. deptno = d.deptno
where d.loc like 'd%';

-- 11. 이름에 'A'가 들어가는 사원들의 이름과 부서이름을 출력하라.
select *
from emp
where ename like 'a%';

select e.ename, d.dname
from emp e
join dept d
on e.deptno = d.deptno
where e.ename like 'a%';

-- 12. 사원이름과 그 사원이 속한 부서의 부서명, 그리고 월급을 출력하는데 월급이 3000이상인 사원을 출력하라.
select * 
from emp e
join dept d
on e.deptno = d.deptno;

select * 
from emp e
join dept d
on e.deptno = d.deptno
where e.sal >= 3000 ;

select e.ename, d.dname, e.sal
from emp e
join dept d
on e.deptno = d.deptno
where e.sal >= 3000 ;

-- 13. 직위가 'SALESMAN'인 사원들의 직위와 그 사원이름, 그리고 그 사원이 속한 부서 이름을 출력하라.
select * 
from emp e
join dept d
on e.deptno = d.deptno;

select * 
from emp e
join dept d
on e.deptno = d.deptno
where e.job = 'salesman';

select e.ename, d.dname 
from emp e
join dept d
on e.deptno = d.deptno
where e.job = 'salesman';

-- 14. 커미션이 책정된 사원들의 사원번호, 이름, 연봉, 연봉+커미션, 급여등급을 출력하되, 
--  각각의 컬럼명을 '사원번호', '사원이름', '연봉','실급여', '급여등급'으로 하여 출력하라.
select *
from emp e
join dept d 
on e.deptno = d.deptno
where e.comm is not null;

-- 비등가조인 2개이상 테이블을 조인하면서 속성이 일치하지 않는 컬럼들끼리 조인한다   
select e.empno 사원번호, e.ename 사원이름, e.sal 연봉, e.sal+e.comm 실급여, s.grade 급여등급
from emp e
join salgrade s
on e.sal between s.losal and s.hisal
where comm is not null;  

-- 15. 부서번호가 10번인 사원들의 부서번호, 부서이름, 사원이름,월급, 급여등급을 출력하라.
select *
from emp e
join dept d
on e.deptno = d.deptno;

select *
from emp e
join dept d
on e.deptno = d.deptno
where e.deptno = 10;

select *
from emp e
join dept d
on e.deptno = d.deptno
join salgrade s 
on e.sal BETWEEN s.losal and s.hisal
where e.deptno = 10;

select e.deptno, d.dname, e.ename, e.sal, s.grade
from emp e
join dept d
on e.deptno = d.deptno
join salgrade s 
on e.sal BETWEEN s.losal and s.hisal
where e.deptno = 10;

-- 16. 부서번호가 10번, 20번인 사원들의 부서번호, 부서이름, 사원이름, 월급, 급여등급을 출력하라. 그리고 그 출력된 결과물을
-- 부서번호가 낮은 순으로, 월급이 높은 순으로 정렬하라.
select * 
from emp e
join dept d
on e.deptno = d.deptno;

select * 
from emp e
join dept d
on e.deptno = d.deptno
join salgrade s
on e.sal between s.losal and s.hisal
where e.deptno in (10,20);

select e.deptno, d.dname, e.ename, e.sal, s.grade
from emp e
join dept d
on e.deptno = d.deptno
join salgrade s
on e.sal between s.losal and s.hisal
where e.deptno in (10,20);

select e.deptno, d.dname, e.ename, e.sal, s.grade
from emp e
join dept d
on e.deptno = d.deptno
join salgrade s
on e.sal between s.losal and s.hisal
where e.deptno in (10,20)
order by e.deptno asc, e.sal desc;

-- 17. 사원번호와 사원이름, 그리고 그 사원을 관리하는 관리자의 사원번호와 사원이름을 출력하되 각각의 컬럼명을 '사원번호',
-- '사원이름', '관리자번호', '관리자이름'으로 하여 출력하라.
select *
from emp e
join emp e1
on e.empno = e1.mgr;

select e.empno, e.ename, e1.mgr, e1.ename
from emp e
join emp e1
on e.empno = e1.mgr;

select e.empno 사원번호, e.ename 사원이름, e1.mgr 관리자번호, e1.ename 관리자이름
from emp e
join emp e1
on e.empno = e1.mgr;

-- 1. 평균 급여보다 높은 사람의 급여를 받는 사람의 이름과 급여
select * 
from emp;

select avg(sal)
from emp;

select ename, sal 
from emp
where sal > (select avg(sal) from emp);

-- 2. 각 직무별 급여가 1000이상인 직무와 인원수
select * 
from emp
where sal >= 1000;

select job, count(job) 
from emp
where sal >= 1000
group by job;

-- 3. deptno가 20인 사람중에 평균(20그룹평균)급여보다 많이 받는 사람의 이름과, 급여와 부서번호
select *
from emp 
where deptno = 20;

select avg(sal) 
from emp
where deptno = 20;

select *
from emp
where sal > (select avg(sal) from emp where deptno = 20);

select ename, sal, deptno
from emp
where sal > (select avg(sal) from emp where deptno = 20)
and deptno = 20;

-- 4. deptno가 20인 사람중에 평균(전체평균)급여보다 많이 받는 사람의 이름과, 급여와 부서번호
select *
from emp
where deptno = 20;

select avg(sal)
from emp;

select *
from emp
where sal > (select avg(sal) from emp)
and deptno = 20;

select ename, sal, deptno 
from emp
where sal > (select avg(sal) from emp)
and deptno = 20;

-- 5. deptno가 20인 사람중에 평균(전체평균)급여보다 많이 받는 사람의 이름과, 급여와 부서번호와 부서명
select *
from emp e
join dept d
on e.deptno = d.deptno;

select *
from emp e
join dept d
on e.deptno = d.deptno
where e.deptno = 20;

select *
from emp e
join dept d
on e. deptno = d.deptno
where sal > (select avg(sal) from emp)
and e.deptno = 20;

select e.ename, e.sal, d.deptno, d.dname
from emp e
join dept d
on e. deptno = d.deptno
where sal > (select avg(sal) from emp)
and e.deptno = 20;
 
-- 6. smith보다 높은 급여를 받는 사람의 이름과 급여
select *
from emp;

select sal
from emp
where ename = 'smith';

select *
from emp
where sal > (select sal from emp where ename = 'smith');
 
select ename, sal
from emp
where sal > (select sal from emp where ename = 'smith');

-- 7. 모든 직원의 이름과 직무, 입사년도(hiredata)를 출력하시오. 입사년도는 년월일만 출력한다.
select *
from emp;

select ename, job, date_format(hiredate,'%y-%m-%d')
from emp;

-- 8. 각 직원이 받는 급여의 grade를 서브쿼리로 해결하세요. 직원명, 급여, 급여등급
select ename, sal, (case when sal >= 3001 then 5
		      when sal >= 2001 then 4
		      when sal >= 1401 then 3
		      when sal >= 1201 then 2
	                else 1
		    end) grade
from emp;

-- 9. 각 직원이 받는 급여와 동일한 grade의 최저급여와 최고급여도 같이 출력하시오. 직원명, 급여, 등급, 최저급여, 최고급여 (서브쿼리로 해결하시오)
select *
from (select *, case when sal >= 3001 then 5
		 when sal >= 2001 then 4
		 when sal >= 1401 then 3
		 when sal >= 1201 then 2
		else 1
		end grade
                        from emp) e1;

select e1.ename, e1.sal, e1.grade
from (select *, case when sal >= 3001 then 5
		 when sal >= 2001 then 4
		 when sal >= 1401 then 3
		 when sal >= 1201 then 2
		else 1
		end grade
                        from emp) e1;

select e1.ename, e1.sal, e1.grade
from (select *, case when sal >= 3001 then 5
		 when sal >= 2001 then 4
		 when sal >= 1401 then 3
		 when sal >= 1201 then 2
		else 1
		end grade
                        from emp) e1
group by e1.ename, e1.sal;

-- 10. 직원을 모두 출력하시오.. 직원명 직무 상급자명(MGR의 ename) 기본급
select *
from emp;

select *
from emp e
join emp e1
on e.mgr = e1.empno;

select e.ename, e.job, e1.ename, e.sal
from emp e
left outer join emp e1
on e.mgr = e1.empno;